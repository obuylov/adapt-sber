{
  "_args": [
    [
      "typechecker@4.11.0",
      "C:\\Users\\Xiaomi\\Desktop\\GitHub\\adapt-sber"
    ]
  ],
  "_from": "typechecker@4.11.0",
  "_id": "typechecker@4.11.0",
  "_inBundle": false,
  "_integrity": "sha512-lz39Mc/d1UBcF/uQFL5P8L+oWdIn/stvkUgHf0tPRW4aEwGGErewNXo2Nb6We2WslWifn00rhcHbbRWRcTGhuw==",
  "_location": "/typechecker",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "typechecker@4.11.0",
    "name": "typechecker",
    "escapedName": "typechecker",
    "rawSpec": "4.11.0",
    "saveSpec": null,
    "fetchSpec": "4.11.0"
  },
  "_requiredBy": [
    "/eachr",
    "/extract-opts"
  ],
  "_resolved": "https://registry.npmjs.org/typechecker/-/typechecker-4.11.0.tgz",
  "_spec": "4.11.0",
  "_where": "C:\\Users\\Xiaomi\\Desktop\\GitHub\\adapt-sber",
  "author": {
    "name": "2013+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "babel": {
    "env": {
      "edition-browsers": {
        "sourceType": "module",
        "presets": [
          [
            "@babel/preset-env",
            {
              "targets": "defaults",
              "modules": false
            }
          ],
          "@babel/preset-typescript"
        ],
        "plugins": [
          "@babel/proposal-object-rest-spread",
          "@babel/plugin-proposal-optional-chaining",
          "@babel/proposal-class-properties",
          "add-module-exports"
        ]
      },
      "edition-node-13": {
        "sourceType": "module",
        "presets": [
          [
            "@babel/preset-env",
            {
              "targets": {
                "node": "13"
              },
              "modules": "commonjs"
            }
          ],
          "@babel/preset-typescript"
        ],
        "plugins": [
          "@babel/proposal-object-rest-spread",
          "@babel/plugin-proposal-optional-chaining",
          "@babel/proposal-class-properties",
          "add-module-exports"
        ]
      },
      "edition-node-0.8": {
        "sourceType": "module",
        "presets": [
          [
            "@babel/preset-env",
            {
              "targets": {
                "node": "0.8"
              },
              "modules": "commonjs"
            }
          ],
          "@babel/preset-typescript"
        ],
        "plugins": [
          "@babel/proposal-object-rest-spread",
          "@babel/plugin-proposal-optional-chaining",
          "@babel/proposal-class-properties",
          "add-module-exports"
        ]
      }
    }
  },
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com"
    }
  },
  "browser": "edition-browsers/index.js",
  "bugs": {
    "url": "https://github.com/bevry/typechecker/issues"
  },
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    },
    {
      "name": "Joe Gesualdo",
      "email": "joegesualdo@gmail.com",
      "url": "joegesualdo.com"
    },
    {
      "name": "Sean Fridman",
      "email": "mail@seanfridman.com",
      "url": "http://seanfridman.com"
    },
    {
      "name": "Matt Bierner",
      "url": "http://mattbierner.com"
    },
    {
      "name": "dependabot-preview[bot]",
      "url": "http://github.com/apps/dependabot-preview"
    }
  ],
  "dependencies": {
    "editions": "^2.2.0"
  },
  "description": "Utilities to get and check variable types (isString, isPlainObject, isRegExp, etc)",
  "devDependencies": {
    "@babel/cli": "^7.7.0",
    "@babel/core": "^7.7.2",
    "@babel/plugin-proposal-class-properties": "^7.7.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.6.2",
    "@babel/plugin-proposal-optional-chaining": "^7.6.0",
    "@babel/preset-env": "^7.7.1",
    "@babel/preset-typescript": "^7.7.2",
    "@typescript-eslint/eslint-plugin": "^2.7.0",
    "@typescript-eslint/parser": "^2.7.0",
    "assert-helpers": "4.10.0",
    "babel-plugin-add-module-exports": "^1.0.2",
    "eslint": "^6.6.0",
    "eslint-config-bevry": "^1.3.0",
    "eslint-config-prettier": "^6.6.0",
    "eslint-plugin-prettier": "^3.1.1",
    "kava": "3.2.0",
    "prettier": "^1.19.1",
    "projectz": "^1.10.0",
    "surge": "^0.21.3",
    "typedoc": "^0.15.2",
    "typescript": "^3.7.2",
    "valid-directory": "^1.1.1"
  },
  "editions": [
    {
      "description": "typescript source code with import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "typescript compiled for browsers with import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    },
    {
      "description": "typescript compiled for node.js 13 with require for modules",
      "directory": "edition-node-13",
      "entry": "index.js",
      "tags": [
        "javascript",
        "require"
      ],
      "engines": {
        "node": "6 || 8 || 10 || 12 || 13",
        "browsers": false
      }
    },
    {
      "description": "typescript compiled for node.js 0.8 with require for modules",
      "directory": "edition-node-0.8",
      "entry": "index.js",
      "tags": [
        "javascript",
        "require"
      ],
      "engines": {
        "node": "0.8 || 0.10 || 0.12 || 4 || 6 || 8 || 10 || 12 || 13",
        "browsers": false
      }
    }
  ],
  "engines": {
    "node": ">=0.8"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "funding": "https://bevry.me/fund",
  "homepage": "https://github.com/bevry/typechecker",
  "keywords": [
    "types",
    "type",
    "check",
    "getType",
    "isPlainObject",
    "isEmpty",
    "isEmptyObject",
    "isNativeClass",
    "isConventionalClass",
    "isClass",
    "isObject",
    "isError",
    "isDate",
    "isArguments",
    "isFunction",
    "isRegExp",
    "isArray",
    "isNumber",
    "isString",
    "isBoolean",
    "isNull",
    "isUndefined",
    "isMap",
    "isWeakMap"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "module": "edition-browsers/index.js",
  "name": "typechecker",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bevry/typechecker.git"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-browsers && npm run our:compile:edition-node-0.8 && npm run our:compile:edition-node-13",
    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --extensions \".ts,.tsx\" --out-dir ./edition-browsers ./source",
    "our:compile:edition-node-0.8": "env BABEL_ENV=edition-node-0.8 babel --extensions \".ts,.tsx\" --out-dir ./edition-node-0.8 ./source",
    "our:compile:edition-node-13": "env BABEL_ENV=edition-node-13 babel --extensions \".ts,.tsx\" --out-dir ./edition-node-13 ./source",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier && npm run our:verify:typescript",
    "our:verify:directory": "npx valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:prettier": "prettier --write ./source/**",
    "our:verify:typescript": "tsc --noEmit --project .",
    "test": "node ./test.js"
  },
  "title": "TypeChecker",
  "types": "source/index.ts",
  "version": "4.11.0"
}
